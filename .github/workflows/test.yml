on: [deployment_status]

jobs:
  pa11y:
    if: github.event.deployment_status.state == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Run pa11y-ci
        id: run-pa11y-ci
        run: |
          npm run pa11y-ci -- "--sitemap ${{ github.event.deployment_status.target_url }}/sitemap.xml" 2>&1 | tee pa11y_output.txt
          echo ::set-output name=pa11yResults::$(cat pa11y_output.txt)

      - name: Comment on PR
        uses: actions/github-script@v5
        env:
          BODY_PREFIX: "<!-- pa11y-results -->"
          PA11Y_RESULTS: ${{ steps.run-pa11y-ci.outputs.pa11yResults }}
        with:
          script: |
            const commentBody = `${process.env.BODY_PREFIX}<details><summary>pa11y results</summary>this is a test</details>`
            console.log('comment body', commentBody)
            console.log('context object', context)

# console.log('Listing comments...')
# const { data: comments } = await github.rest.issues.listComments({
#   issue_number: context.issue.number,
#   owner: context.repo.owner,
#   repo: context.repo.repo
# })

# const previousComment = comments.find((comment) => comment.body.startsWith(process.env.BODY_PREFIX))
# if (previousComment) {
#   console.log('Updating comment...')
#   await github.rest.issues.updateComment({
#     owner: context.repo.owner,
#     repo: context.repo.repo,
#     comment_id: previousComment.id,
#     body: commentBody
#   })
# } else {
#   console.log('Creating new comment...')
#   await github.rest.issues.createComment({
#     issue_number: context.issue.number,
#     owner: context.repo.owner,
#     repo: context.repo.repo,
#     body: commentBody
#   })
# }
